name: Branch Protection

on:
  workflow_dispatch:
  schedule:
    # Run daily to ensure protection rules are maintained
    - cron: '0 0 * * *'

jobs:
  require-status-checks:
    name: Require status checks to pass before merging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub

      - name: Update branch protection
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          from github import Github
          import os

          # Initialize GitHub client
          g = Github(os.getenv('GITHUB_TOKEN'))
          repo = g.get_repo(os.getenv('GITHUB_REPOSITORY'))

          # Define required status checks
          required_status_checks = [
              'lint',
              'test (3.12, ubuntu-latest)',
              'test (3.12, windows-latest)',
              'test (3.12, macos-latest)',
              'PR Validation'
          ]

          # Protect main and develop branches
          for branch_name in ['main', 'develop']:
              try:
                  branch = repo.get_branch(branch_name)
                  branch.edit_protection(
                      required_approving_review_count=1,
                      enforce_admins=False,
                      dismiss_stale_reviews=True,
                      require_code_owner_reviews=False,
                      required_status_checks=required_status_checks,
                      require_branches_to_be_up_to_date=True,
                      required_conversation_resolution=True,
                      allow_force_pushes=False,
                      allow_deletions=False
                  )
                  print(f"✅ Protected branch: {branch_name}")
              except Exception as e:
                  print(f"⚠️ Error protecting {branch_name}: {str(e)}")
                  raise
